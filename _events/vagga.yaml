containers:
  events_service:
    setup:
    - !Ubuntu trusty
    - !UbuntuUniverse
    - !Install [libpq-dev, ca-certificates, git, ssh]
    - !Py3Requirements requirements.txt
    environ: {DATABASE_URL: postgres://vaggauser:password@127.0.0.1:5434/vaggadb}

  postgres:
    setup:
    - !Ubuntu trusty
    - !Install [postgresql]
    - !Sh |
       mkdir -p /data
    environ:
      PG_PORT: 5434
      PG_DB: vaggadb
      PG_USER: vaggauser
      PG_PASSWORD: password
      PGDATA: /data
      PG_BIN: /usr/lib/postgresql/9.3/bin
    volumes:
      /data: !Tmpfs
        size: 100M
        mode: 0o700

commands:
  run: !Supervise
    description: Run app
    children:
      service: !Command
        container: events_service
        run: |
            touch /work/.tmp.dbcreation.lock
            while [ -f /work/.tmp.dbcreation.lock ]; do sleep 0.2; done
            alembic upgrade head
            python3 manage.py add_provider TEST1 --key 424242
            python3 manage.py add_provider TEST2 --key 434343
            python3 manage.py run_server

      db: !Command
        container: postgres
        run: |
            chown postgres:postgres $PGDATA;
            su postgres -c "$PG_BIN/pg_ctl initdb";
            su postgres -c "echo 'host all all all trust' >> $PGDATA/pg_hba.conf"
            su postgres -c "$PG_BIN/postgres -F --port=$PG_PORT -h 127.0.0.1 -k /tmp" &
            sleep 1
            su postgres -c "$PG_BIN/psql -h 127.0.0.1 -p $PG_PORT -c \"CREATE USER $PG_USER WITH PASSWORD '$PG_PASSWORD';\""
            su postgres -c "$PG_BIN/createdb -h 127.0.0.1 -p $PG_PORT $PG_DB -O $PG_USER";
            rm -f /work/.tmp.dbcreation.lock
            wait
